name: Build

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
        PROJECT: 'erosion'
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: temurin

      - name: Build
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build
          cache-read-only: ${{ github.ref_name != 'master' && github.ref_name != 'development' }}

      - name: Publish to Maven Repository
        if: ${{ github.repository == 'GeyserMC/Erosion' }}
        uses: gradle/gradle-build-action@v2
        env:
          ORG_GRADLE_PROJECT_geysermcUsername: ${{ vars.DEPLOY_USER }}
          ORG_GRADLE_PROJECT_geysermcPassword: ${{ secrets.DEPLOY_PASS }}
        with:
          arguments: publish
          cache-read-only: ${{ github.ref_name != 'master' && github.ref_name != 'development' }}

      - name: Get Release Metadata
        if: ${{ success() && github.repository == 'GeyserMC/Erosion' && github.ref_name == 'master' }}
        uses: Kas-tle/base-release-action@b863fa0f89bd15267a96a72efb84aec25f168d4c # https://github.com/Kas-tle/base-release-action/releases/tag/main-11
        with:
          appID: ${{ secrets.RELEASE_APP_ID }}
          appPrivateKey: ${{ secrets.RELEASE_APP_PK }}
          files: |
            erosion:bukkit-plugin/build/libs/Erosion.jar
          releaseEnabled: false
          saveMetadata: true
      - name: Update Generated Metadata
        if: ${{ success() && github.repository == 'GeyserMC/Erosion' && github.ref_name == 'master' }}
        run: |
          cat metadata.json
          echo
          mv metadata.json metadata.json.tmp
          version=$(cat gradle.properties | grep -o "version=[0-9\\.]*" | cut -d"=" -f2)
          jq --arg project "${PROJECT}" --arg version "${version}" '
            .
            | .changes |= map({"commit", "summary", "message"}) 
            | .downloads |= map_values({"name", "sha256"})
            | {$project, "repo", $version, "number": .build, "changes", "downloads"}
          ' metadata.json.tmp > metadata.json
          cat metadata.json
      - name: Publish to Downloads API
        if: ${{ success() && github.repository == 'GeyserMC/Erosion' && github.ref_name == 'master' }}
        shell: bash
        env:
          DOWNLOADS_USERNAME: ${{ vars.DOWNLOADS_USERNAME }}
          DOWNLOADS_PRIVATE_KEY: ${{ secrets.DOWNLOADS_PRIVATE_KEY }}
          DOWNLOADS_SERVER_IP: ${{ secrets.DOWNLOADS_SERVER_IP }}
        run: |
          # Save the private key to a file
          echo "$DOWNLOADS_PRIVATE_KEY" > id_ecdsa
          chmod 600 id_ecdsa
          # Create the build folder
          ssh -o StrictHostKeyChecking=no -i id_ecdsa $DOWNLOADS_USERNAME@$DOWNLOADS_SERVER_IP mkdir -p "~/uploads/$PROJECT/$GITHUB_RUN_NUMBER/"
          # Copy over artifacts
          rsync -P -e "ssh -o StrictHostKeyChecking=no -i id_ecdsa" bukkit-plugin/build/libs/Erosion.jar $DOWNLOADS_USERNAME@$DOWNLOADS_SERVER_IP:~/uploads/$PROJECT/$GITHUB_RUN_NUMBER/
          # Run the build script
          rsync -P -e "ssh -o StrictHostKeyChecking=no -i id_ecdsa" metadata.json $DOWNLOADS_USERNAME@$DOWNLOADS_SERVER_IP:~/uploads/$PROJECT/$GITHUB_RUN_NUMBER/

      - name: Notify Discord
        if: ${{ (success() || failure()) && github.repository == 'GeyserMC/Erosion' }}
        uses: Tim203/actions-git-discord-webhook@main
        with:
          webhook_url: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
